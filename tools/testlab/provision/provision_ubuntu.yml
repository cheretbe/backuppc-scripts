---

- name: Ubuntu box provision
  hosts: all

  tasks:
    - name: Print host information
      debug:
        msg: "{{ ansible_fqdn }}: {{ ansible_distribution }} {{ ansible_distribution_version}}"

    - name: Export AO_DEFAULT_VAGRANT_PASSWORD env variable
      lineinfile:
        path: /etc/profile.d/set_test_env_settings.sh
        line: "export AO_DEFAULT_VAGRANT_PASSWORD={{ AO_DEFAULT_VAGRANT_PASSWORD }}"
        create: yes
      when: AO_DEFAULT_VAGRANT_PASSWORD != ''
      become: yes

    - include_role: name="/ansible-playbooks/backuppc-server"

    - name: Install apt packages
      apt:
        name: ["curl", "libkrb5-dev", "cifs-utils", "python3-venv", "python3-dev",
               "linux-modules-extra-{{ ansible_kernel }}", "autofs"
              ]
        update_cache: yes
        # 1 hour
        cache_valid_time: 3600
      become: yes

    - name: Add localhost to BackupPC hosts
      lineinfile:
        path: /etc/BackupPC/hosts
        line: "localhost\t0"
      become: yes
      notify: Restart backuppc service

    - name: Add 172.24.0.11 to BackupPC hosts
      lineinfile:
        path: /etc/BackupPC/hosts
        line: "172.24.0.11\t0"
      become: yes
      notify: Restart backuppc service

    - name: Make sure '/etc/BackupPC/pc' directory exists
      ansible.builtin.file:
        path: /etc/BackupPC/pc
        state: directory
        mode: '0755'
        owner: backuppc-server
        group: backuppc-server
      become: yes

    - name: Create BackupPC config for localhost
      ansible.builtin.template:
        src: templates/localhost.pl
        dest: /etc/BackupPC/pc/localhost.pl
        owner: backuppc-server
        group: backuppc-server
        mode: '0640'
      become: yes

    - name: Create BackupPC config for 172.24.0.11
      ansible.builtin.template:
        src: templates/172.24.0.11.pl
        dest: /etc/BackupPC/pc/172.24.0.11.pl
        owner: backuppc-server
        group: backuppc-server
        mode: '0640'
      become: yes

    - name: Create '/etc/rsyncd.conf' file
      ansible.builtin.copy:
        content: |
          pid file = /var/run/rsyncd.pid
          read only = yes
          # BackupPC local connection
          address = 127.0.0.1

          [smb]
          path = /smb
          list = yes
          auth users = backuppc
          secrets file = /etc/rsyncd.secrets
        dest: /etc/rsyncd.conf
        owner: root
        group: root
        mode: '0644'
      become: yes
      # notify is not needed, as the daemon re-reads the config file whenever a client connects

    - name: Create '/etc/rsyncd.secrets' file
      ansible.builtin.copy:
        content: |
          backuppc:backuppc
        dest: /etc/rsyncd.secrets
        owner: root
        group: root
        mode: '0600'
      become: yes

    - name: Create rsync service unit file
      ansible.builtin.copy:
        remote_src: yes
        src: /lib/systemd/system/rsync.service
        dest: /etc/systemd/system/rsync.service
        owner: root
        group: root
        mode: '0644'
      become: yes
      notify: Restart rsync service

    - name: Make sure '/var/lib/backuppc/.ssh' directory exists
      ansible.builtin.file:
        path: /var/lib/backuppc/.ssh
        state: directory
        mode: '0700'
        owner: backuppc-server
        group: backuppc-server
      become: yes

    - name: Generate private key for backuppc-server user
      community.crypto.openssl_privatekey:
        path: /var/lib/backuppc/.ssh/id_rsa
        owner: backuppc-server
      become: yes

    - name: Generate public key for backuppc-server user
      community.crypto.openssl_publickey:
        format: OpenSSH
        path: /var/lib/backuppc/.ssh/id_rsa.pub
        privatekey_path: /var/lib/backuppc/.ssh/id_rsa
        owner: backuppc-server
        return_content: yes
      become: yes
      register: backuppc_server_user_pubkey

    - name: Set SSH options for backuppc-server user
      ansible.builtin.copy:
        content: |
          BatchMode yes
          StrictHostKeyChecking no
        dest: /var/lib/backuppc/.ssh/config
        owner: backuppc-server
        group: backuppc-server
        mode: '0644'
      become: yes

    - include_role: name="/ansible-playbooks/backuppc-client"
      vars:
        backuppc_client_ssh_auth_key: "{{ backuppc_server_user_pubkey.publickey }}"

    - name: Make sure '/etc/BackupPC/credentials' directory exists
      ansible.builtin.file:
        path: /etc/BackupPC/credentials
        state: directory
        mode: '0700'
        owner: backuppc-server
        group: backuppc-server
      become: yes

    - name: Create SMB credentials file
      ansible.builtin.copy:
        content: |
          username=vagrant
          password={{ AO_DEFAULT_VAGRANT_PASSWORD }}
        dest: /etc/BackupPC/credentials/vagrant_smb_shares
        owner: backuppc-server
        group: backuppc-server
        mode: '0600'
      become: yes

    - name: Allow passwordless sudo for mount script
      ansible.builtin.copy:
        content: |
          # Allow BackupPC helper script to unmount Windows shares
          backuppc-server ALL=NOPASSWD: /bin/umount -t cifs /smb/*
        dest: /etc/sudoers.d/backuppc_server
        owner: root
        group: root
        mode: '0640'
      become: yes

    - name: Create SMB credentials file
      ansible.builtin.copy:
        content: |
          username=vagrant
          password={{ AO_DEFAULT_VAGRANT_PASSWORD }}
        dest: /root/.backuppc_smb_credentials
        owner: root
        group: root
        mode: '0600'
      become: yes
      notify: Restart autofs service

    - name: Make sure '/etc/auto.master.d/' directory exists
      ansible.builtin.file:
        path: /etc/auto.master.d/
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: yes

    - name: Create custom autofs master file
      ansible.builtin.copy:
        content: |
          /smb  /etc/auto.smb_backuppc --timeout=600 -browse
        dest: /etc/auto.master.d/smb_backuppc.autofs
        owner: root
        group: root
        mode: '0600'
      become: yes
      notify: Restart autofs service

    - name: Create autofs file for 172.24.0.11
      ansible.builtin.copy:
        content: >
          172.24.0.11
          -fstype=cifs,credentials=/root/.backuppc_smb_credentials,dir_mode=0755,file_mode=0755,uid=backuppc,rw
          /C ://172.24.0.11/Backup_C
        dest: /etc/auto.smb_backuppc
        owner: root
        group: root
        mode: '0644'
      become: yes
      notify: Restart autofs service

  handlers:
    - name: Restart backuppc service
      service:
        name: backuppc
        state: restarted
      become: yes

    - name: Restart autofs service
      service:
        name: autofs
        state: restarted
      become: yes

    - name: Restart rsync service
      systemd:
        name: rsync
        state: restarted
        daemon_reload: yes
      become: yes
